---
const { title, images = [], video = null } = Astro.props;
---

<!-- Swiper 스타일 -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

<style>
  /* 이미지 드래그 및 선택 방지 */
  img {
    user-select: none;
    -webkit-user-drag: none;
    pointer-events: none;
  }

  .swiper-slide {
    min-width: 0 !important;
  }
</style>

<div class="bg-gray-100 rounded-xl shadow-lg overflow-hidden">
  <div class="p-6">
    <h3 class="text-xl font-semibold mb-4">{title}</h3>

    <div class="swiper mySwiper">
      <div class="swiper-wrapper">
        {images.map((img) => (
          <div class="swiper-slide" key={img}>
            <img
              loading="lazy"
              decoding="async"
              src={img}
              alt="Project image"
              class="w-full h-full object-contain aspect-[4/3] bg-white rounded-lg"
            />
          </div>
        ))}
        {video && (
          <div class="swiper-slide">
            <video
              muted
              playsinline
              class="w-full h-full object-contain aspect-[4/3] bg-black rounded-lg"
            >
              <source src={video} type="video/mp4" />
              Your browser does not support the video tag.
            </video>
          </div>
        )}
      </div>

      <!-- 버튼 -->
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
    </div>
  </div>
</div>

<!-- 우클릭 방지 -->
<script>
  document.addEventListener('contextmenu', (e) => e.preventDefault());
</script>

<script type="module">
  import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.mjs';

  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".mySwiper").forEach((el) => {
      const swiper = new Swiper(el, {
        loop: false, // ← 문제 생기면 true로 다시
        navigation: {
          nextEl: el.querySelector(".swiper-button-next"),
          prevEl: el.querySelector(".swiper-button-prev"),
        },
        speed: 800,
        slidesPerView: 1,
        slidesPerGroup: 1,
        allowTouchMove: false, // 휙휙 넘김 방지
        autoplay: false,
        observer: true,
        observeParents: true,
      });

      const slides = el.querySelectorAll(".swiper-slide");

      let autoplayTimer = null;
      let currentVideoListeners = null;

      const clearVideoListeners = (video) => {
        if (!video || !currentVideoListeners) return;
        video.removeEventListener("canplaythrough", currentVideoListeners.canplaythrough);
        video.removeEventListener("ended", currentVideoListeners.ended);
        currentVideoListeners = null;
      };

      const setAutoplayForSlide = (index) => {
        clearTimeout(autoplayTimer);

        const slide = slides[index];
        if (!slide) return;

        const video = slide.querySelector("video");

        if (video) {
          clearVideoListeners(video);

          video.pause();
          video.currentTime = 0;

          const onCanPlayThrough = () => {
            video.play().catch(() => {});
          };

          const onEnded = () => {
            swiper.slideNext();
          };

          video.addEventListener("canplaythrough", onCanPlayThrough, { once: true });
          video.addEventListener("ended", onEnded, { once: true });

          currentVideoListeners = {
            canplaythrough: onCanPlayThrough,
            ended: onEnded,
          };
        } else {
          autoplayTimer = setTimeout(() => {
            swiper.slideNext();
          }, 5000);
        }
      };

      setAutoplayForSlide(swiper.realIndex);

      swiper.on("slideChange", () => {
        setAutoplayForSlide(swiper.realIndex);
      });
    });
  });
</script>

